// ConsoleApplication9.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#define _ITERATOR_DEBUG_LEVEL 0

#include <cmath>
#include <matplot/matplot.h>
#include <set>

int main() {
    using namespace matplot;
    std::vector<double> x = linspace(0, 2 * pi, 10);
    std::vector<double> y = transform(x, [](auto x) { return sin(x); });
    //std::vector<double> x = iota(0, 2 * pi, 10);
    //plot(x, y, "-o");
    //hold(on);
    //plot(x, transform(y, [](auto y) { return -y; }), "--xr");
    //plot(x, transform(x, [](auto x) { return x / pi - 1.; }), "-:gs");
    //std::cout << x.size();
    std::set<std::vector<double>> y1 = {{1, 3, 4, 0}, {2, 5, 4, 7}, {6, 4, 5, 3}};
    std::cout << typeid(y1).name();
    plot(y1);
    plot3();
    show();
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
